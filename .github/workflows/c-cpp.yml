name: C/C++ CI

on:
  [push, pull_request]

jobs:   
  build: 
    runs-on: windows-latest
    steps:
    - name: Install CMake
      run: |
        choco install cmake
    - name: Install Ninja
      run: |
        choco install ninja
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.2'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'
        install-deps: 'true'
        cache: 'true'
        cache-key-prefix: 'install-qt-action'
    - uses: actions/checkout@v3
    - name: Setup build environment
      run: |
        mkdir build
        cd build
        cmake ../app/345Application -GNinja
   
    - name: Build with Ninja
      run: cmake --build ./build
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: executable
        path: build/HandApp.exe

  install-python-tts:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4.7.0
        with:
          python-version: 3.10
          cache: 'pip'
      - name: Install TTS using Python 3.10
        run: |
          pip install tts
        
  run:
    needs: [build, install-python-tts]
    runs-on: windows-latest
    steps: 
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: executable
      - name: Run Executable
        run: |
          ./HandApp.exe

  codecov:
    needs: run
    runs-on: windows-latest
    steps: 
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4.7.0
        with:
          python-version: 3.10
          # cache: 'pip'
      - name: Generate coverage report
        run: |
          pip install pytest
          pip install pytest-cov
          pytest --cov=cosc345 --cov-report=xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: 1afab4df-7044-4128-ac0c-6909eeba0bbf
        with:
          # token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/reports/
          # env_vars: OS,PYTHON
          # fail_ci_if_error: true
          # files: ./coverage1.xml,./coverage2.xml,!./cache
          flags: unittests
          # name: codecov-umbrella
          # verbose: true
          files: ./coverage1.xml

  coverity-analysis:
    runs-on: windows-latest
    steps:
      # ... other steps for building and running Coverity analysis ...
      
      - name: Display Coverity Badge
        run: echo "![Coverity Analysis Status](https://scan.coverity.com/projects/28987/badge.svg)" >> README.md


    
