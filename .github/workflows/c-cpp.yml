name: C/C++ CI

on:
  [push, pull_request]

jobs:   
  build: 
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Python 3.11.4
      uses: actions/setup-python@v4.7.0
      with:
        python-version: 3.11.4
        cache: 'pip'

    - name: Install Python dependencies
      run: |
        pip install -r requirements.txt
    - name: Install CMake
      run: |
        choco install cmake
    - name: Install Ninja
      run: |
        choco install ninja
    - name: Install OpenCV
      run: |
        choco install opencv
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.2'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'
        install-deps: 'true'
        cache: 'true'
        cache-key-prefix: 'install-qt-action'
        modules: 'qtmultimedia'
    - uses: ilammy/msvc-dev-cmd@v1.4.1
    - name: Setup build environment
      working-directory: ${{github.workspace}}
      run: |
          cat CMakeLists.txt
          mkdir build
          cd build
          cmake -GNinja -DCMAKE_BUILD_TYPE=Release ..
          cmake --build . 
      
    - uses: ilammy/msvc-dev-cmd@v1.4.1
    - name: Build with Ninja
      run: cmake --build ./build --config Release
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: executable
        path: build/345Application.exe
        
  run:
    needs: build
    runs-on: windows-latest
    steps: 
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: executable
      - name: Run Executable
        run: |
          ./345Application.exe
          
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4.7.0
        with:
          python-version: 3.10
          # cache: 'pip'

      - name: Install lcov
        run: choco install lcov -y

      - name: Capture Coverage Data
        run: lcov --capture --directory build --output-file coverage.info
        working-directory: ${{ github.workspace }}

      - name: Generate Coverage Report
        run: |
          lcov --remove coverage.info '/usr/*' --output-file coverage.info
          lcov --list coverage.info
        working-directory: ${{ github.workspace }}/build

      - name: Debug
        run: |
          ls -R
          find . -name "coverage.info"  
          
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.info
      - name: Upload2?
        run: |
          pip install codecov-cli
          codecovcli create-commit
          codecovcli create-report
          codecovcli do-upload

  coverity-analysis:
    runs-on: windows-latest
    steps:
      # ... other steps for building and running Coverity analysis ...
      
      - name: Display Coverity Badge
        run: echo "![Coverity Analysis Status](https://scan.coverity.com/projects/28987/badge.svg)" >> README.md


    
