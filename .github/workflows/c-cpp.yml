name: C/C++ CI

on:
  [push, pull_request]

jobs:   
  build: 
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Python 3.11.4
      uses: actions/setup-python@v4.7.0
      with:
        python-version: 3.11.4
        cache: 'pip'
    # - name: Cache Dependencies
    #   id: cache-dependencies
    #   uses: actions/cache@v2
    #   with:
    #     path: ~/.cache/pip
    #     key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
    #     restore-keys: |
    #       ${{ runner.os }}-pip-
          
    - name: Install dependencies
      # if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      
    - name: Install CMake
      run: |
        choco install cmake
    - name: Install Ninja
      run: |
        choco install ninja
    - name: Install OpenCV
      run: |
        choco install opencv
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.2'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'
        install-deps: 'true'
        cache: 'true'
        cache-key-prefix: 'install-qt-action'
        modules: 'qtmultimedia'
    - uses: ilammy/msvc-dev-cmd@v1.4.1
    - name: Setup build environment with Ninja
      run: |
        mkdir build
        cd build
        cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=ON
    - uses: ilammy/msvc-dev-cmd@v1.4.1
    - name: Build with Ninja
      run: cmake --build ./build --config Release
    - name: Test
      run: |
        ctest -C build --verbose --test-dir build
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: executable
        path: build/345Application.exe
        
  run:
    needs: build
    runs-on: windows-latest
    steps: 
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: executable
      - name: Run Executable
        run: |
          ./345Application.exe

  code-coverage:
    needs: run
    runs-on: windows-latest
    steps: 
      - name: Checkout code
        uses: actions/checkout@v3
      # - name: Setup Python
      #   uses: actions/setup-python@v4.7.0
      #   with:
      #     python-version: 3.10
      - name: Install C++ compiler
        run: |
          choco install visualcpp-build-tools -y
        shell: powershell
      - name: Install gcovr
        run: |
          pip install gcovr
        shell: powershell
      - name: Tests
        run: |
          for /r .\src %i in (*.cpp) do g++ --coverage tests\test.cpp "%i" -o coverage1 -lwinmm
          ./coverage1
          gcovr -r ./src --xml -o coverage.xml
      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v2
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: coverage.xml
  doxygen:
    needs: run
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set up Doxygen
        run: choco install doxygen.install -y

      - name: Delete Old Files
        run: rm -r docs/*
        
      - name: Generate Documentation
        run: doxygen Doxyfile  # Adjust the path to Doxyfile
      

      - name: Move files to /docs
        run: mv docs/html/* docs/
        
      - name: Commit and Push Changes
        run: |
          git config --local user.name "GitHub Actions"
          git config --local user.email "actions@github.com"
          git add docs/
          git commit -m "Update documentation"
          git push

    
